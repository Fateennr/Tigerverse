// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Player{
  ID              Int @id @default(autoincrement())
  Name            String
  DOB             DateTime
  BattingStyle    String
  ICCRanking      Int
  IntDebut        DateTime
  Profile         String
  CaptainStatus   Boolean @default(false)
  PlayerRole      String
  Squad_ID        Int //For handling one - to - many relations 
  squads          Squad @relation(fields: [Squad_ID], references: [Squad_ID]) 
} 

model Coach {
  ID           Int @id @default(autoincrement())
  Name         String
  Nationality  String
  Current_Team Int
  Squad_ID     Int
  squad        Squad @relation(fields: [Squad_ID], references: [Squad_ID])
}

model Matches {

  Match_ID     Int @id @default(autoincrement())
  Match_Format String
  Runs         String // it will be like '115/10' etc
  Opponent_ID  Int
  Match_Date   DateTime
  Stadium      String
  Squad_ID     Squad[]
}

model Squad {
  Squad_ID Int @id @default(autoincrement())
  Match_ID Int
  players  Player[] // to make one to many relation, keep the player array into the squad and connect it
  coaches  Coach[] // Keeping the Coaach instance as a list
  matches  Matches @relation(fields: [Match_ID], references: [Match_ID]) 
}


model Batting_Career {
  ID         Int @unique
  Matches    Int // number of matches played
  Innings    Int
  Runs       Int
  Average    Float //batting average
  High_Score Int
  B_F        Float 
  S_R        Float //strike rate
  Hundreds     Int 
  Fifties      Int
  Format     String // test, odi or t20
  players Player @relation(fields: [ID], references: [ID])
}

model Bowling_Career{
  ID Int
  Match Int
  Innings Int
  Runs Int
  Wkts Int
  BBI String
  BBM String
  Econ Float
  Average Float
  FiveWkts Int 
  TenWkts Int 
  Format String
  players Player @relation(fields: [ID], references: [ID])
}

model Hall_Of_Fame {
  Title String
  Year Int
  Description String
  Imgsrc String
  Player_ID Int
  players Player @relation(fields: [Player_ID], references: [ID]) 
}


//model Head2head {
  //Format_Type String
  //Played int
  //Won Int
  //Lost Int
  //Tied Int
  //No_Result Int
  //Capped Int
  //Highest_Inn 
  //Lowest_Inn Key
  //Best_Bowling Key
  //Best_Batting Key
  //OpponentID Country
//}





